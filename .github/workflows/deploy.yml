name: Deploy ML App
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "Pushed images: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG and $ECR_REGISTRY/$ECR_REPOSITORY:latest"

      - name: Deploy to EC2 via SSM
          run: |
            aws ssm send-command \
              --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
              --document-name "AWS-RunShellScript" \
              --parameters '{
                "commands": [
                  "echo \"Logging in to ECR...\"",
                  "aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }} || { echo \"ECR login failed\"; exit 1; }",
                  "echo \"Pulling image...\"",
                  "docker pull ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest || { echo \"Docker pull failed\"; exit 1; }",
                  "echo \"Stopping existing container...\"",
                  "docker stop extroverts_ml_predictor || true",
                  "docker rm extroverts_ml_predictor || true",
                  "echo \"Running new container...\"",
                  "docker run -d --name extroverts_ml_predictor -p 80:80 ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest || { echo \"Docker run failed\"; exit 1; }"
                ]
              }' \
              --region ${{ secrets.AWS_REGION }} \
              --output text
            echo "SSM command sent. Check AWS Console for execution status."